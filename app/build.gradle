plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdk 33

    defaultConfig {
        applicationId "dev.bulean.notwallet"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName '1.0.0'

        buildConfigField 'String', "BASEURL", localProperties['BASEURL']
        buildConfigField 'String', "APIKEY", localProperties['APIKEY']
        buildConfigField 'String', "APIVALUE", localProperties['APIVALUE']

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }

}

dependencies {
    implementation project(":data")
    implementation project(":domain")
    implementation project(":usecases")
    // Core
    implementation "androidx.core:core-ktx:$coreKTX"
    implementation "androidx.appcompat:appcompat:$appCompat"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinJDK7"
    implementation "com.google.android.material:material:$material"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
    // Activity
    implementation "androidx.activity:activity-ktx:$activityKTX"
    // Lifecycle components
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleKTX"
    // StateFlow
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleKTX"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleKTX"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleKTX"
    // Location
    implementation "com.google.android.gms:play-services-location:$psLocation"
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit"
    implementation "com.squareup.okhttp3:okhttp:$okHTTP"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHTTP"
    // Picasso
    implementation "com.squareup.picasso:picasso:$picasso"
    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxCoroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinxCoroutines"
    // Retrofit coroutines support
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofitCoroutinesAdapter"
    // Gson
    implementation "com.google.code.gson:gson:$retrofit"
    // Splashscreen
    implementation "androidx.core:core-splashscreen:$splashscreen"
    // Room components
    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-ktx:$room"
    kapt "androidx.room:room-compiler:$room"
    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"
    implementation "androidx.legacy:legacy-support-v4:$legacySupportV4"
    // Error
    implementation "io.arrow-kt:arrow-core:$arrowCore"
    // Hilt
    implementation "com.google.dagger:hilt-android:$daggerHilt"
    kapt "com.google.dagger:hilt-compiler:$daggerHilt"
    // Unit test
    testImplementation "junit:junit:$junit"
    testImplementation "io.mockk:mockk:$mockk"
    testImplementation "org.mockito:mockito-core:$mockitoCore"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlin"
    testImplementation "org.mockito:mockito-inline:$mockitoInline"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinxCoroutines"
    // Android test
    androidTestImplementation "androidx.room:room-testing:$roomTest"
    androidTestImplementation "androidx.test.ext:junit:$testExt"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCore"
}
